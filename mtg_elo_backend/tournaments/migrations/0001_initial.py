# Generated by Django 5.2.4 on 2025-07-12 02:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('players', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(help_text='The number of the round in the tournament.', verbose_name='Round Number')),
            ],
            options={
                'ordering': ['tournament__date', 'number'],
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player1_score', models.IntegerField(default=0, help_text='The score of player 1 in the match.', verbose_name='Player 1 Score')),
                ('player2_score', models.IntegerField(default=0, help_text='The score of player 2 in the match.', verbose_name='Player 2 Score')),
                ('player1', models.ForeignKey(help_text='The first player in the match.', on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_player1', to='players.player')),
                ('player2', models.ForeignKey(help_text='The second player in the match.', on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_player2', to='players.player')),
                ('winner', models.ForeignKey(help_text='The player who won the match.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_matches', to='players.player')),
                ('round', models.ForeignKey(help_text='The round this match belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='tournaments.round')),
            ],
            options={
                'ordering': ['round__tournament__date', 'round__number'],
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=35, verbose_name='name')),
                ('date', models.DateField(help_text='The date of the tournament.', verbose_name='date')),
                ('players', models.ManyToManyField(help_text='The players who participated in the tournament.', related_name='tournaments', to='players.player')),
                ('winner', models.ForeignKey(help_text='The player who won the tournament.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_tournaments', to='players.player')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='round',
            name='tournament',
            field=models.ForeignKey(help_text='The tournament this round belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='rounds', to='tournaments.tournament'),
        ),
        migrations.CreateModel(
            name='TournamentRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(help_text='The rating of the player in the tournament.', verbose_name='rating')),
                ('rd', models.FloatField(help_text='Rating Deviation of the player in the tournament.', verbose_name='RD')),
                ('player', models.ForeignKey(help_text='The player to whom this rating belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='players.player')),
                ('tournament', models.ForeignKey(help_text='The tournament to which this rating belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='tournaments.tournament')),
            ],
            options={
                'ordering': ['tournament__date', '-rating', 'rd'],
            },
        ),
    ]
